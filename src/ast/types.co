/**
 *
 */
class Type
    ids = 0

    (@typename ? "type") ->
        ids := ids + 1
        @typename += ids
        @validation = null
        @assign = null

class TypeChoice extends Type
    (@types ? []) ->
        super "choice"

    addType: function (type)
        @types.push type

class TypeProperty extends Type
    (@name, @inner_type) ->
        super "property"
        @default = null

    setDefault: function (literal)
        # FIXME find out about if literal is okay.
        @default = literal
   
class TypePropertyList extends Type
    (@list ? []) ->
        super "proplist"

    push: function (elt)    
        @list.push elt

/**
 *
 */
class TypeArray extends Type
    (@inner_type) ->
        super "array"

        if not @inner_type
            @inner_type = new TypeAnything!

/**
 *  The Object class
 */
class TypeObject extends Type
    ->
        super "object"
        @properties = new TypePropertyList

    addProperty: function (prop)
        #if prop not instanceof TypeProperty
        #    throw new Error "Can't add a non property to an Object Typeode"

        @properties.push prop

class TypeString extends Type
    -> super "string"
        
class TypeNumber extends Type
    -> super "number"

class TypeBoolean extends Type
    -> super "boolean"

class TypeAnything extends Type
    -> super "anything"

class TypeInteger extends Type
    -> super "anything"

class TypeDate extends Type
    -> super "anything"

class TypeNull extends Type
    -> super "null"

class TypeUndefined extends Type
    -> super "undefined"

class TypeRef extends Type
    @types = {}

    @declare = function (name, ref)
        @types[name] = ref

    (@name, @type) -> 
        super "ref_#{@name}"
        TypeRef.declare name, this

class TypeRefCall extends Type
    (@name) ->
    getRef: function
        return TypeRef.types[@name]

exports <<< { TypeInteger, TypeAnything, TypeBoolean, TypeNumber, TypeString, TypeArray, TypeObject, TypeProperty, TypeChoice, TypeDate, TypeRef, TypeRefCall, TypeNull, TypeUndefined, TypePropertyList }

