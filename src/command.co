`#!/usr/bin/env node`

optimist = require "optimist"
    .usage "Transform a validatr formatted file or stdin\nUsage: $0 [options] file\n       $0 [options]"
    .boolean [\help]

    .alias do
        help: \h

    .describe do
        help: "Show this help"

argv = optimist.argv

fs = require "fs"
util = require "util"
grammar = require "./grammar"
{ printVisitor } = require "./vst"

function parse (data)
    try
        res = grammar.parse data
        # console.log "Done parsing"
        return (printVisitor.visit res) + '\n'
    catch e
        console.log e.stack
        console.log "#{e.message}"
        return ""

if argv.help
    console.log optimist.help()
    process.exit 0

if argv._.length >= 1
    for file of argv._
        (err, data) <- fs.readFile file, 'utf-8', ...
        if err
            console.warn err.message
        else
            res = parse data
            util.print res
else
    process.stdin.resume()
    process.stdin.setEncoding "utf-8"

    # Read our file from stdin
    data = ""
    process.stdin.on "data", (chunk) ->
        data += chunk

    # When read, process it.
    <- process.stdin.on "end"
    util.print parse data

